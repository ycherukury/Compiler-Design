Root                    ->  Statement 
Statement               ->  SimpleStatement Statement | CompoundStatement Statement | 
SimpleStatement         ->  AssignmentExpression NL
AssignmentExpression    ->  ID '<-' Expr_1 | Expr_1 '->' ID | ID '=' Expr_1
Expr_1                  ->  E1 | String | Vector
E1                      ->  E2 | E1 '+' E2 | E1 '-' E2
E2                      ->  E3 | E2 '/' E3 | E2 '*' E3
E3                      ->  ID | NUM | '(' E1 ')'
Flow_Statement          ->  'break' | 'next'
Display_statement       ->  'print' '(' Printitems ')'
Printitems              ->  Expr1 | Vector | String 
CompoundStatement       ->  if_loop NL | while_loop NL | for_loop NL | repeat_loop NL
if_loop                 ->  'if' '(' condition ')'  NL '{' suite '}' elseif_loop
elseif_loop             ->  'else' 'if' '(' condition ')' '{' suite '}' elseif_loop | else_loop
else_loop               ->  'else' '{' suite '}' | 
while_loop              ->  'while' '(' condition ')'  NL '{' suite '}'
for_loop                ->  'for' '(' ID  'in' sequence ')' NL '{' suite '}'
repeat_loop             ->  'repeat' '{' suite '}'
suite                   ->  NL Statement
condition               ->  condition '|' subcond1 | subcond1
subcond1                ->  subcond1 '&' subcond2 | subcond2
subcond2                ->  RelationalExpression
RelationalExpression    ->  ID | NUM | RelationalExpression OPREL Expr1 
OPREL                   ->  '<' | '>' | '=='
sequence                ->  'seq' '(' startendind ')' | ID
startendind             ->  jumpsize | NUM  ',' NUM  | NUM ':' NUM
jumpsize                ->  NUM ',' NUM ',' FROM '=' NUM
Vector                  ->  'c' '(' Vectorsubexpr ')'
Vectorsubexpr           ->  NUM ',' Vectorsubexpr | STRING ',' Vectorsubexpr | NUM | STRING | Vector
NUM                     ->  '2345' | '123' | '1' | '2' | '3' | '4' | '5' | '6'
ID                      ->  'abcezxc' | 'defg' | 'expression1' | 'i' | 'count'
String                  ->  'datthesh'
NL                      ->  '\n'